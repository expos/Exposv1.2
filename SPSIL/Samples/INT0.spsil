define PCB_START 768;
define READY_LIST 720;

//saving the state of currently running process.
S0 = PCB_START + PID*16;
[S0] = PID;
[S0+1] = BP;
[S0+2] = SP;
[S0+3] = [SP-1];
[S0+4] = R0;
[S0+5] = R1;
[S0+6] = R2; 
[S0+7] = R3;
[S0+8] = R4;
[S0+9] = R5;
[S0+10] = R6;
[S0+11] = R7;

//loading the next available process
alias nextPID S1;
nextPID = PID + 1;
while( ( nextPID != PID ) ) do
	if( nextPID == 0 ) then    // to skip the INIT process with pid = 0.
		nextPID = ( nextPID + 1 )%12;
		continue;
	endif;
	S5=[ READY_LIST + nextPID ];
	if( S5 == 1 ) then
		break;
	endif;
	nextPID = ( nextPID + 1 )%12;  // 12 denotes the total number of processes.
endwhile;

if(nextPID == PID) then		//when no other
	PID = 0;
else
	PID = nextPID;
endif;

//restoring the state of the new process found
S0 = PCB_START + nextPID*16;
BP = [S0+1];
SP = [S0+2];
[SP] = [S0+3];
SP = SP+1;
R0 = [S0+4];
R1 = [S0+5];
R2 = [S0+6]; 
R3 = [S0+7];
R4 = [S0+8];
R5 = [S0+9];
R6 = [S0+10];
R7 = [S0+11];
ireturn;
